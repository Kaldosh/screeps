var roleUpgrader = {

    /** @param {Creep} creep **/
    run: function(creep) {

        if(creep.memory.upgrading && creep.carry.energy == 0) {
            if (creep.memory.tempRole){
                delete creep.memory.tempRole;
                delete creep.memory.tempRoleUntil;
                delete creep.memory.upgrading;
                return;
            } else {
                creep.memory.upgrading = false;
                creep.say('harvesting');
            }
	    }
	    if(!creep.memory.upgrading && creep.carry.energy == creep.carryCapacity) {
	        creep.memory.upgrading = true;
	        creep.say('upgrading');
	    }

	    if(creep.memory.upgrading) {
            if(creep.upgradeController(creep.room.controller) == ERR_NOT_IN_RANGE) {
                var result = creep.moveTo(creep.room.controller);
                if (result && result !=ERR_TIRED) creep.say("move failed:" + result);
            }
        }
        else {
            if (creep.memory.sourceId==undefined) {
                var nearestContainer = creep.pos.findClosestByRange(FIND_STRUCTURES, {
                    filter: (structure) => {
                        return (structure.structureType == STRUCTURE_CONTAINER) && structure.store.energy >0;
                    }
                });

                if (nearestContainer) {
                    if(nearestContainer.transfer(creep, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {
                        var result = creep.moveTo(nearestContainer);
                        if (result && result !=ERR_TIRED) creep.say("move failed:" + result);
                    }
                }
            } else {
                var sources = creep.room.find(FIND_SOURCES);
                var mysource= sources[creep.memory.sourceId||creep.room.defaultSourceId||0];
                if(creep.harvest(mysource) == ERR_NOT_IN_RANGE) {
                    var result = creep.moveTo(mysource);
                    if (result && result !=ERR_TIRED) creep.say("move failed:" + result);
                }
            }
        }
	}
};

module.exports = roleUpgrader;
